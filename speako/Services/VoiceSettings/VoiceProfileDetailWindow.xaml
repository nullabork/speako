<Window x:Class="speako.Services.VoiceSettings.VoiceProfileDetailWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:speako.Services.VoiceSettings" xmlns:gif="https://github.com/XamlAnimatedGif/XamlAnimatedGif"
        mc:Ignorable="d"
        Title="VoiceWindow" Height="533" Width="490" Closing="Window_Closing" ResizeMode="NoResize">
    <StackPanel>

        <StackPanel.Resources>
            <Style TargetType="StackPanel">
                <Setter Property="Margin" Value="0,0,0,10"/>
                <Setter Property="MaxWidth" Value="450"/>
            </Style>
        </StackPanel.Resources>

        <StackPanel>
            <Label Content="Custom Voice Name" VerticalAlignment="Top"/>
            <TextBox x:Name="voiceNameTextBox" Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}"/>
        </StackPanel>

        <StackPanel>
            <Label Content="Provider" VerticalAlignment="Top"/>
            <ComboBox x:Name="providerComboBox" SelectedValue="{Binding ConfiguredProviderGUID, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="DisplayName"  SelectedValuePath="GUID" VerticalAlignment="Top" SelectionChanged="providerComboBox_SelectionChanged"/>
        </StackPanel>

        <StackPanel>
            <Label Content="Voice" VerticalAlignment="Top"/>
            <ComboBox x:Name="voiceComboBox" SelectedItem="{Binding VoiceID, UpdateSourceTrigger=PropertyChanged}"  SelectedValue="{Binding VoiceID}" VerticalAlignment="Top"/>
        </StackPanel>

        <StackPanel>
            <Label Content="Output Device" VerticalAlignment="Top"/>
            <ComboBox x:Name="outputDeviceComboBox"  SelectedItem="{Binding AudioDeviceGUID, UpdateSourceTrigger=PropertyChanged}" SelectedValue="{Binding AudioDeviceGUID}" SelectedValuePath="DeviceGuid" VerticalAlignment="Top"  HorizontalContentAlignment="Stretch" SelectionChanged="outputDeviceComboBox_SelectionChanged" >
                <ComboBox.ItemContainerStyle>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="Width" Value="450"/>
                    </Style>
                </ComboBox.ItemContainerStyle>
            </ComboBox>
        </StackPanel>

        <StackPanel>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Row="0" Grid.Column="0" Margin="0,0,0,0" >
                    <StackPanel Orientation="Horizontal">
                        <Label  Content="Volume" />
                        <Label x:Name="volumeValueLabel" Content="{Binding Value, ElementName=volumeValueSlider}"/>
                    </StackPanel>
                    <Slider Margin="20,0,0,0" Maximum="100" Value="{Binding Volume, UpdateSourceTrigger=PropertyChanged}" Minimum="0" x:Name="volumeValueSlider" ValueChanged="volumeValueSlider_ValueChanged"/>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <TextBlock TextDecorations="Underline" Text="Reset Volume" x:Name="resetVolume" Foreground="#FF0452B3" FontSize="11" Cursor="Hand" MouseDown="resetVolume_MouseDown" Margin="0,0,10,0"/>
                    </StackPanel>
                </StackPanel>

                <StackPanel Grid.Row="0" Grid.Column="1" Margin="0,0,0,0">
                    <StackPanel Orientation="Horizontal">
                        <Label Content="Speed" />
                        <Label x:Name="speedValueLabel" Content="{Binding Value, ElementName=speedValueSlider}"/>
                    </StackPanel>
                    <Slider Margin="20,0,0,0" Maximum="100" Value="{Binding Speed, UpdateSourceTrigger=PropertyChanged}" Minimum="0" x:Name="speedValueSlider"/>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <TextBlock TextDecorations="Underline" Text="Reset Speed" x:Name="resetSpeed" Foreground="#FF0452B3" FontSize="11" Cursor="Hand" MouseDown="resetSpeed_MouseDown" Margin="0,0,10,0"/>
                    </StackPanel>
                </StackPanel>

            </Grid>
        </StackPanel>

        <StackPanel>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Row="0" Grid.Column="0" Margin="0,0,0,0">
                    <StackPanel Orientation="Horizontal">
                        <Label Content="Pitch" />
                        <Label x:Name="pitchValueLabel" Content="{Binding Value, ElementName=pitchValueSlider}" />
                    </StackPanel>
                    <Slider Margin="20,0,0,0" Maximum="100" Value="{Binding Pitch, UpdateSourceTrigger=PropertyChanged}" Minimum="0" x:Name="pitchValueSlider"/>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                      
                        <TextBlock TextDecorations="Underline" Text="Reset Pitch"  x:Name="resetPitch" Foreground="#FF0452B3" FontSize="11" Cursor="Hand" MouseDown="resetPitch_MouseDown" Margin="0,0,10,0" />
                            
                    </StackPanel>
                </StackPanel>

                <StackPanel Grid.Row="0" Grid.Column="1" Margin="0,0,0,0">
                    <StackPanel Orientation="Horizontal">
                        <Label Content="Other" />
                        <Label x:Name="otherValueLabel" Content="{Binding Value, ElementName=otherValueSlider}" />
                    </StackPanel>
                    <Slider Margin="20,0,0,0" Maximum="100" Value="{Binding Other, UpdateSourceTrigger=PropertyChanged}" Minimum="0" x:Name="otherValueSlider"/>
                </StackPanel>

            </Grid>
        </StackPanel>

        <StackPanel>
            <Label Content="Test" VerticalAlignment="Top"/>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <!-- Fills remaining space -->
                    <ColumnDefinition Width="Auto" />
                    <!-- Adjusts to the size of the button -->
                </Grid.ColumnDefinitions>

                <!-- TextBox spans first column -->
                <TextBox x:Name="ttsTestSentence" Grid.Column="0" VerticalAlignment="Stretch"  Text="{Binding TTSTestSentence}"  HorizontalAlignment="Stretch"/>

                <!-- Button in second column -->
                <Button Content="Test" 
                Grid.Column="1" 
                VerticalAlignment="Center" 
                 Margin="10,0,0,0"
                Click="TestButton_Click" Width="50" Grid.Row="6"/>
            </Grid>
        </StackPanel>


        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
            <StackPanel.Resources>
                <Style TargetType="Button">
                    <Setter Property="Padding" Value="10,2"/>
                </Style>
            </StackPanel.Resources>
            <Button x:Name="saveButton" Click="SaveButton_Click" Height="22"  Width="50">
                Save
            </Button>



        </StackPanel>
    </StackPanel>
</Window>
